package gerar_arquivo_produtos_tiny;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Iterator;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import nl.knaw.dans.common.dbflib.CorruptedTableException;
import nl.knaw.dans.common.dbflib.DbfLibException;
import nl.knaw.dans.common.dbflib.IfNonExistent;
import nl.knaw.dans.common.dbflib.Record;
import nl.knaw.dans.common.dbflib.Table;

public class modifica_importa extends javax.swing.JFrame {

    /**
     * Creates new form Antenna
     */
    public modifica_importa() {
        initComponents();


        try {
            initRecuperaDados();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(modifica_importa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(null,"Não foi possível concluir o processo, verifique a localização dos arquivos !","Atenção", JOptionPane.CLOSED_OPTION);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_caminho_destino = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fileh Systems - Arquivo de atualização Base Produtos");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Position/Direction "));

        jLabel2.setText("Caminho destino :");

        jTextField_caminho_destino.setText("C:\\fileh_systems_atualiza_produtos.fileh");
        jTextField_caminho_destino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_caminho_destinoActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField_caminho_destino, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .add(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(37, 37, 37)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jTextField_caminho_destino, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setText("Gerar arquivo...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Modificar arquivo de Produtos para importação do Tiny ");
        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initRecuperaDados() throws FileNotFoundException {
        //RECUPERA CAMINHOS DIGITADOS 

        String caminho_destino;

        Scanner scanner;

        //TENTA NO D:
        try {
            scanner = new Scanner(new FileReader("D:\\fileh_systems_config.txt"))
                    .useDelimiter("\\n");

            if (scanner != null) {
                while (scanner.hasNext()) {
                    //RECUPERA DADOS ARQUIVO LIDO
                    caminho_destino = scanner.next();

                    this.jTextField_caminho_destino.setText(caminho_destino);
                }
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(modifica_importa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(null,"Não foi encontrado arquivo de configuração com o nome fileh_systems_config.txt no diretório D:, será verificado no E: !","Atenção", JOptionPane.CLOSED_OPTION);
        }


        //TENTA NO E:
        try {
            scanner = new Scanner(new FileReader("E:\\fileh_systems_config.txt"))
                    .useDelimiter("\\n");

            if (scanner != null) {
                while (scanner.hasNext()) {
                    //RECUPERA DADOS ARQUIVO LIDO
                    caminho_destino = scanner.next();

                    this.jTextField_caminho_destino.setText(caminho_destino);
                }
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(modifica_importa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(null,"Não foi possível concluir o processo, verifique a localização dos arquivos !","Atenção", JOptionPane.CLOSED_OPTION);
        }

    }

    /**
     * GERA ARQUIVO DE ESTOQUE PARA ATUALIZAÇÃO DA BASE DE PRODUTOS DO FILEH SYSTEMS
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        String aux;
        String codigo, descricao, unidade;
        Number preco; 



        
        //TODO: CONECTAR AO BANCO E JOGAR PARA ALGO TIPO ESSE TABLE AE
        

        Table table = new Table(new File(this.jTextField_caminho_arquivo.getText().replace("\r", "")));
        String arquivo_destino = this.jTextField_caminho_destino.getText();

        PrintWriter printWriter = null;

        String linha = " ";



        try {
            printWriter = new PrintWriter(arquivo_destino,"UTF-8");
            
        } catch (IOException ex) {
            Logger.getLogger(modifica_importa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(null,"Não foi possível concluir o processo, verifique a localização dos arquivos !","Atenção", JOptionPane.CLOSED_OPTION);
        }




        try {
            table.open(IfNonExistent.ERROR);


            Iterator<Record> iterator = table.recordIterator();
            int i = 0;
            while (iterator.hasNext()) {
                
                if (i == 0) {
                    //linda 1
                    linha = "PRODUTO";
                    printWriter.println(linha);
                    i++;
                    
                    //linha 2
                    linha = "CD_PRODUTO;DS_PRODUTO;DS_UNIDADE;VL_PRECO;CD_USUARIO";
                    printWriter.println(linha);
                    i++;
                   
                }else{
                Record record = iterator.next();
                 
                codigo = record.getStringValue("CODIGO");//0
                descricao = record.getStringValue("DESCRICAO");//1
                unidade = record.getStringValue("MEDIDA");//2
                preco = record.getNumberValue("PRECO");//3
                //estoque = record.getNumberValue("QTD_ATUAL");//10
                //preco_custo = record.getNumberValue("CUSTOCOMPR");//11

                linha =  codigo.replace("\"", "")+";"+ descricao.replace("\'", "") +";"+unidade.trim()+";"+preco+");";
                
                printWriter.println(linha);
                                 
                };
                
            };

            printWriter.close();
            

        } catch (IOException ex) {
            Logger.getLogger(modifica_importa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(null,"Não foi possível concluir o processo, verifique a localização dos arquivos !","Atenção", JOptionPane.CLOSED_OPTION);
        } catch (CorruptedTableException ex) {
            Logger.getLogger(modifica_importa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(null,"Não foi possível concluir o processo, verifique a localização dos arquivos !","Atenção", JOptionPane.CLOSED_OPTION);
        } catch (DbfLibException ex) {
            Logger.getLogger(modifica_importa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(null,"Não foi possível concluir o processo, verifique a localização dos arquivos !","Atenção", JOptionPane.CLOSED_OPTION);
        }
        
        
        JOptionPane.showConfirmDialog(null,"Processo concluído com sucesso !","Atenção", JOptionPane.CLOSED_OPTION);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField_caminho_destinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_caminho_destinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_caminho_destinoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels = javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx = 0; idx < installedLookAndFeels.length; idx++) {
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(modifica_importa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(modifica_importa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(modifica_importa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(modifica_importa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new modifica_importa().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField_caminho_destino;
    // End of variables declaration//GEN-END:variables
}
